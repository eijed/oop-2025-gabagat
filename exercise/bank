import java.util.ArrayList;
import java.util.Scanner;

public class bank {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        Bank bank = new Bank();
        Teller teller = new Teller("Danna");

        // customer
        Customer customer1 = new Customer("Aldrich", 1000);
        bank.addCustomer(customer1);

        boolean running = true;
        while (running) {
            System.out.println("===== BANK MENU =====");
            System.out.println("[1] Deposit");
            System.out.println("[2] Withdraw");
            System.out.println("[3] View Customer Info");
            System.out.println("[4] View Total Bank Capital");
            System.out.println("[5] Exit");
            System.out.print("Enter choice: ");
            int choice = sc.nextInt();

            if (choice == 1) {
                System.out.print("Enter deposit amount: ");
                double amount = sc.nextDouble();
                teller.processDeposit(customer1, amount);

            } else if (choice == 2) {
                System.out.print("Enter withdrawal amount: ");
                double amount = sc.nextDouble();
                teller.processWithdrawal(customer1, amount);

            } else if (choice == 3) {
                customer1.displayInfo();

            } else if (choice == 4) {
                System.out.println("\nTotal Bank Capital: $" + bank.getTotalCapital());

            } else if (choice == 5) {
                running = false;
                System.out.println("\nThank you for banking with us!");

            } else {
                System.out.println("\nInvalid choice.");
            }
        }
    }
}

// Bank class
class Bank {
    private ArrayList<Customer> customers = new ArrayList<>();

    public void addCustomer(Customer c) {
        customers.add(c);
    }

    public double getTotalCapital() {
        double total = 0;
        for (Customer c : customers) {
            total += c.getSavings();
        }
        return total;
    }

    public Customer getCustomer(int index) {
        if (index >= 0 && index < customers.size()) {
            return customers.get(index);
        }
        return null;
    }

    public void listCustomers() {
        for (Customer c : customers) {
            c.displayInfo();
        }
    }
}

// Abstract Person class
abstract class Person {
    protected String name;

    public Person(String name) {
        this.name = name;
    }

    public String getName() {
        return name;
    }

    public abstract void displayInfo();
}

// Customer class
class Customer extends Person {
    private double savings;

    public Customer(String name, double initialDeposit) {
        super(name);
        this.savings = initialDeposit;
    }

    public double getSavings() {
        return savings;
    }

    public void deposit(double amount) {
        savings += amount;
    }

    public boolean withdraw(double amount) {
        if (amount <= savings) {
            savings -= amount;
            return true;
        }
        return false;
    }

    @Override
    public void displayInfo() {
        System.out.println("Customer: " + name + " | Balance: $" + savings);
    }
}

// Teller class
class Teller extends Person {
    public Teller(String name) {
        super(name);
    }

    public void processDeposit(Customer customer, double amount) {
        customer.deposit(amount);
        printReceipt(customer, "Deposit", amount);
    }

    public void processWithdrawal(Customer customer, double amount) {
        if (customer.withdraw(amount)) {
            printReceipt(customer, "Withdrawal", amount);
        } else {
            System.out.println("\nInsufficient funds.");
        }
    }

    private void printReceipt(Customer customer, String type, double amount) {
        System.out.println("\n===== BANK RECEIPT =====");
        System.out.println("Teller: " + this.name);
        System.out.println("Customer: " + customer.getName());
        System.out.println("Transaction: " + type);
        System.out.println("Amount: $" + amount);
        System.out.println("New Balance: $" + customer.getSavings());
        System.out.println("========================\n");
    }

    @Override
    public void displayInfo() {
        System.out.println("Teller: " + name);
    }
}